import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, LabelEncoder
from sklearn.ensemble import GradientBoostingClassifier
from sklearn.metrics import confusion_matrix, accuracy_score, classification_report

# Load dataset
file_path = "/content/data (3).csv"
df = pd.read_csv(file_path)

# Drop ID column and separate features and target
df = df.drop(columns=['ID'])  # Remove identifier column
X = df.drop(columns=['class'])  # Features
y = df['class']  # Target

# Encode target labels
label_encoder = LabelEncoder()
y_encoded = label_encoder.fit_transform(y)

# Normalize features
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)  # Scale entire dataset

# Train Gradient Boosting Classifier
gbc = GradientBoostingClassifier(n_estimators=100, learning_rate=0.1, random_state=42)
gbc.fit(X_scaled, y_encoded)

# Predictions on full dataset
y_full_pred = gbc.predict(X_scaled)

# Accuracy on full dataset
full_accuracy = accuracy_score(y_encoded, y_full_pred)
print(f"Full Dataset Accuracy: {full_accuracy:.4f}")

# Classification report
print("\nClassification Report:\n", classification_report(y_encoded, y_full_pred, target_names=label_encoder.classes_))

# Confusion matrix for all 174 samples
conf_matrix_full = confusion_matrix(y_encoded, y_full_pred)

# Visualization of Confusion Matrix
plt.figure(figsize=(8, 6))
sns.heatmap(conf_matrix_full, annot=True, fmt='d', cmap='Blues', 
            xticklabels=label_encoder.classes_, yticklabels=label_encoder.classes_)
plt.xlabel('Predicted Label')
plt.ylabel('True Label')
plt.title('Confusion Matrix (All 174 Samples)')
plt.show()
